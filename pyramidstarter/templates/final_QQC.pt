<!DOCTYPE html>
<html lang="${request.locale_name}">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="pyramid web application">
    <meta name="author" content="Pylons Project">
    <link rel="icon" type="image/png" sizes="16x16"
          href="${request.static_url('pyramidstarter:static/favicon-16x16.png')}">
    <link rel="icon" type="image/png" sizes="96x96"
          href="${request.static_url('pyramidstarter:static/favicon-96x96.png')}">


    <title>Pedel revamp</title>
    <!-- Bootstrap core CSS
    <link rel="stylesheet" href="${request.static_url('pyramidstarter:static/bootstrap/css/bootstrap.min.css')}">-->

    <!--Fontawesome-->
    <link rel="stylesheet" href="${request.static_url('pyramidstarter:static/font-awesome/css/font-awesome.min.css')}">

    <!-- Custom styles for this scaffold -->
    <!-- was bootstrap-theme-->
    <link href="${request.static_url('pyramidstarter:static/bootstrap/css/darkly.min.css')}" rel="stylesheet">
    <link href="${request.static_url('pyramidstarter:static/bs-callout.css')}" rel="stylesheet">

    <!--slider-->
    <link href="${request.static_url('pyramidstarter:static/bootstrap-slider.min.css')}" rel="stylesheet">
    <!--switch-->
    <link href="${request.static_url('pyramidstarter:static/bootstrap/css/bootstrap-switch.min.css')}" rel="stylesheet">
    <link href="${request.static_url('pyramidstarter:static/bootstrap-select.min.css')}" rel="stylesheet">
    <!--Extras-->
    <link href="${request.static_url('pyramidstarter:static/sitewide.css')}" rel="stylesheet">

    <!--pyspinner-->
    <link href="${request.static_url('pyramidstarter:static/pyspinner.css')}" rel="stylesheet">
    <!--main CSS-->
        <link rel="stylesheet" href="${request.static_url('pyramidstarter:static/pedel.css')}">

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="//oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
    <![endif]-->

     <!--my code was Jquery 2. boots used 1 <script src="http://oss.maxcdn.com/libs/jquery/1.10.2/jquery.min.js"></script>-->
<!--<script src="http://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
        crossorigin="anonymous"></script>-->
   <script type='text/javascript' src="${request.static_url('pyramidstarter:static/jquery-3.2.1.min.js')}"></script>


</head>

<body style="padding-top: 60px;">
<!-- Fixed navbar -->
<nav class="navbar navbar-default navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Pedel Redux</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li class=""><a href="/">Home</a></li>
                <li class=""><a href="/glue">Glue</a></li>
                <li class=""><a href="/mutantcaller">MutantCaller</a></li>
                <li class=""><a href="/mutanalyst">Mutanalyst</a></li>
                <li class=""><a href="/pedel">Pedel</a></li>
                <li class=""><a href="/driver">Driver</a></li>
                <li class=""><a href="/deepscan">Deepscan</a></li>
                <li class="active"><a href="/QQC">QQC</a></li>
                <li class=""><a href="/misc">Miscellaneous</a></li>

            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li class=""><a href="/about">About</a></li>
            </ul>
        </div><!--/.nav-collapse -->
    </div>
</nav>
<br/>
<!--MODAL for scheme. not activated on all pages!-->
<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="CodonScheme" id="scheme_modal">
  <div class="modal-dialog modal-lg" role="document">

      <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="codon_title">Helper to plan degenerate codons</h4>
      </div>
      <div class="modal-body">
                <div class="row">
                    <div class="bs-callout bs-callout-warning">Under construction. The ones with question marks fail and this section.</div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="row">
                            <div class="input-group"><span class="input-group-addon">Codon</span><select
                                    class='selectpicker' aria-labelledby="codon_drop" id="codon_drop" title="Choose...">
                                <option value="NNN" data-def="Generic scheme. Unbalanced and with 3/64 stop codons.">
                                    NNN
                                </option>
                                <option value="NNK"
                                        data-def="Common scheme, identical to NNS. Cuts the number of stop codons while still making tryptophan.">
                                    NNK
                                </option>
                                <option value="NNS"
                                        data-def="Common scheme, identical to NNK. Cuts the number of stop codons while still making a tryptophan">
                                    NNS
                                </option>
                                <option value="NAN" data-def="Gives charged amino acids of various sizes.">NAN</option>
                                <option value="NTN" data-def="Gives hydrophobic residues.">NTN</option>
                                <option value="NGN"
                                        data-def="Not generally empoyed alone: it yields GRWC —note the glycine. hence the NSN codon.">
                                    NGN
                                </option>
                                <option value="NCN" data-def="Gives small residues, but not glycine.">NCN</option>
                                <option value="NSN" data-def="Gives small redisues including glycine and cysteine">NSN
                                </option>
                                <option value="NDT" data-def="">NDT</option>
                                <option value="DBK" data-def="">DBK</option>
                                <option value="NRT" data-def="">NRT</option>
                                <option data-divider="true"></option>
                                <option value="19c" data-def="">??? (19c)</option>
                                <option value="20c" data-def="">Tang (20c)</option>
                                <option value="21c" data-def="">??? (21c)</option>
                                <option value="22c" data-def="">Kille (22c)</option>
                                <option data-divider="true"></option>
                                <option value="other" data-def="">other...</option>
                            </select>
                                <br/>

                            </div>
                        </div>
                        <div class="row">
                            <br/>
                            <div id="codon_manual" hidden>
                                <div class="input-group">
                                    <span class="input-group-addon" data-toggle="tooltip"
                                          title="The mutation used. The input is a string which can be simply four bases (e.g. 'NNK') or multiple codons separated by a space and optionally prefixed with a interger number denoting their ratios (e.g. '12NDT 6VHA 1TGG 1ATG') or a special mix (e.g. 'Tang')."
                                          data-placement="top">Scheme</span>
                                    <input type="text" class="form-control" placeholder="NNN" id="codon_mutation">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div id="codon_graph"></div>
                    </div>
                    <div id="codon_result"></div>
                </div>
      </div>
    </div>
  </div>
</div>



<!--Main -->
<div class="container-fluid" id="fullpage">

    <!--welcome box-->
    <div class="section"> <!--leftover from fullpage.js-->
        
        <div class="row" id="§deepscan">
    <div class="col-lg-8  col-lg-offset-2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h1 class="panel-title">QQCC — Quick quality control calculator</h1>
            </div>
            <div class="panel-body">
                <h2>QQC</h2>
                <h3>Description</h3>
                <p>Site saturation mutagenesis uses primers with a degenerate codon to scramble a single residue.
                    Quick-quality control (QQC) is a way to determine extent of randomisation by sequencing the pool of plasmids, measuring the peaks and calculating the deviation from an ideal mix (<a href="http://www.nature.com/articles/srep10654" target="_blank"><span
                            data-toggle="tooltip" data-placement="top" title="Acevedo-Rocha, CG, Reetz, MT, Nov, Y., (2015). Economical analysis of saturation mutagenesis experiments. Sci. Rep. 5:10654">Acevedo-Rocha <i>et al.</i>, 2015 <i class="fa fa-external-link" aria-hidden="true"></i></span></a>).</p>
                <p>This tool performs automatically the peak measurements, Q-value calculations and expected amino acid proportions.
In the case of sequences mutated with multiple codons a rough estimate of the contributions of each is obtained by optimining the function:</p>
                <div align="center"><img src="${request.static_url('pyramidstarter:static/eq_QQC_white-01.svg')}" alt="equation 1" height="82 em"></div>
                <p>where <i><b>x</b></i> is a scaling factor (4x3xN tensor) of the deviation from expected, <i><b>m</b></i> is the empirical
proportions of bases (4x3 matrix), <i><b>d</b></i> is the proportions of the primers (N dimension vector) and <i><b>h</b></i> is the ideal proportionl of bases in each primer (4x3xN tensor). This approach therefore tries to balance the primers so to minimise the deviation from the ideal primer mix.
                    The usage of the ideal primer mix is unfortunate, but is the only way to tackle the problem of deconvoluting the primers.</p>
                <h3>Input</h3>
                <div class="row">
                    <div class="col-lg-3">
                            <div class="btn-group btn-group-justified" role="group" >
                                <label class="btn btn-warning btn-file" id="QQC_upload_group">
                    <i class="fa fa-upload" aria-hidden="true"></i> Upload<input type="file" id='QQC_upload' style="display: none;">
                </label>
                            </div>
                            <br/>
                        </div>
                    <div class="col-lg-5">
                            <div class="input-group">
                                <span class="input-group-addon" data-toggle="tooltip" title="The upstream sequence of bases to help find where the mutation is." data-placement="top">Upstream seq.</span>
                                <input type="text" class="form-control" placeholder="NNNNNNNNNN" id="QQC_preceding">
                            </div>
                            <br/>
                        </div>
                    <div class="col-lg-4">
                            <div class="input-group">
                                <span class="input-group-addon" data-toggle="tooltip" title="The mutation used. The input is a string which can be simply four bases (e.g. 'NNK') or multiple codons separated by a space and optionally prefixed with a interger number denoting their ratios (e.g. '12NDT 6VHA 1TGG 1ATG') or a special mix (e.g. 'Tang')." data-placement="top">Scheme</span>

                                <input type="text" class="form-control" placeholder="NNK" id="QQC_mutation">
                                <span class="input-group-btn">
                                <button class="btn btn-default" type="button" data-toggle="modal" data-target="#scheme_modal"><i
                                    class="fa fa-flask" aria-hidden="true"></i></button>
                            </span>
                            </div>
                            <br/>
                        </div>

                    </div>
                <div class="row">
                        <div class="col-lg-6 col-lg-offset-3">
                            <div class="btn-group" role="group"  aria-label="...">
                                <button type="button" class="btn btn-warning" id="QQC_clear"><i class="fa fa-eraser" aria-hidden="true"></i> Clear
                                </button>

                                <button type="button" class="btn btn-info" id="QQC_demo"><i class="fa fa-files-o" aria-hidden="true"></i> Demo
                                </button>
                                <button type="button" class="btn btn-success" id="QQC_calculate"><i class="fa fa-exchange" aria-hidden="true"></i> Calculate
                                </button>
                            </div>
                        </div><br/>
                    </div>
                <div class="row hidden" id="QQC_result">
                        <div class="alert alert-danger" role="alert"><span class="pycorpse"></span> Oh Snap. Something went wrong
                        </div>
                        <br/>
                    </div>
                <!--
                    <div class="row hidden" id="QQC_download">
                        <h3>Downloads</h3>
                        <br/>
                        <div class="col-lg-3">Dowload results as:</div>

                        <div class="col-lg-9">
                            <div class="btn-group" role="group" aria-label="...">
                                <button type="button" class="btn btn-success" id="DS_table"><i class="fa fa-bars" aria-hidden="true"></i> CSV
                                </button>
                                <button type="button" class="btn btn-warning" id="DS_json"><i class="fa fa-cog" aria-hidden="true"></i> JSON
                                </button>
                                <button type="button" class="btn btn-info" id="DS_IDT_bulk"><i class="fa fa-shopping-basket" aria-hidden="true"></i> IDT bulk
                                </button>
                                <button type="button" class="btn btn-info" id="DS_IDT_plate"><i class="fa fa-shopping-cart" aria-hidden="true"></i> IDT plate
                                </button>
                            </div>
                        </div>
                        <br/>
                    </div>
                    -->
            </div>
        </div>
    </div>
</div>
    </div>

    </div>

<br/>
<br/>
<br/>
<br/>

<!--footer-->
<div class="navbar navbar-default navbar-fixed-bottom" style="backgound: gainsboro">
    <p class="text-muted" style="align:center;">Made without approval from the ethics committee.</p>
</div>
<!-- Bootstrap core JavaScript
 ================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<!--JQUERY moved up...-->
<!--<script src="https://www.google.com/jsapi"></script>-->
<!--<script type='text/javascript' src="${request.static_url('pyramidstarter:static/modernizr.js')}"></script>-->
<!--<script type='text/javascript' src="http://oss.maxcdn.com/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>-->
<script type='text/javascript' src="${request.static_url('pyramidstarter:static/bootstrap/js/bootstrap.min.js')}"></script>
<script type='text/javascript' src="${request.static_url('pyramidstarter:static/bootstrap-slider.min.js')}"></script>
<script type='text/javascript' src="${request.static_url('pyramidstarter:static/bootstrap/js/bootstrap-switch.min.js')}"></script>
<script type='text/javascript' src="${request.static_url('pyramidstarter:static/FileSaver.min.js')}"></script>
<script type='text/javascript' src="${request.static_url('pyramidstarter:static/bootstrap-select.min.js')}"></script>
<script type='text/javascript' src="https://cdn.plot.ly/plotly-latest.min.js"></script>


    <script>
$(function () {
$('[data-toggle="tooltip"]').tooltip();
$(".slider").bootstrapSlider();
$(".switch").bootstrapSwitch();
$(".hidden").hide();
$('#§welcome').modal('show');
$('#scheme_modal').modal('hide');

function codonist() {
        $("#codon_result").html('<div class="alert alert-warning" role="alert"><span class="pyspinner"></span> Waiting for server reply.</div>');
        $("#codon_result").removeClass('hidden');
        $("#codon_result").show(); //weird combo.
        data=$('#codon_drop').val();
        if (data == 'other') {
            $("#codon_manual").removeClass('hidden');
            $("#codon_manual").show();
            data=$('#codon_mutation').val();
            if (! data) {data='NNN';}
        }
        else {
            $("#codon_manual").addClass('hidden');
            $("#codon_manual").hide();
        }
        $.ajax({
            url: 'ajax_codon',
            type: 'POST',
            data: JSON.stringify(data),
            success: function(result) {
                reply = JSON.parse(result.message);
                window.sessionStorage.setItem('codon', JSON.stringify(reply['data']));
                $("#codon_result").html(reply['html']);
                //$("#QQC_download").removeClass('hidden');
                //$("#QQC_download").show(); //weird combo.
                //$("#QQC_result").html(reply['html']);
                AA = ['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'Y', '*'];
                Plotly.newPlot('codon_graph',[{
                    x: AA,
                    y: AA.map(function(a) {
                        return reply['data'][a]
                    }),
                    name: 'Number of codons',
                    type: 'bar'
                }], {
                    barmode: 'group',
                    title: 'Pedicted amino acid proportions'
                });
            },
            error: function() {
                $("#codon_result").html('<div class="alert alert-danger" role="alert"><span class="pycorpse"></span> Oh Snap. Nothing back.</div>');
            },
            cache: false,
            contentType: false,
            processData: false
        });
    }
    $('#codon_drop').change(codonist);
    $('#codon_mutation').change(codonist);


});


(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
 (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
 m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
 })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

 ga('create', 'UA-66652240-4', 'auto');
 ga('send', 'pageview');

$(function() {
    var files;
    var chromatomap = {
        A: 'rgb(0.4660, 0.6740, 0.1880)',
        T: 'rgb(0.8500, 0.3250, 0.0980)',
        G: 'rgb(0.3250,0.3250,0.3250)',
        C: 'rgb(0,0.4470,0.7410)'
    };
    var chromatomap256 = {
        A: 'rgb(119, 173, 48)',
        T: 'rgb(218, 83, 25)',
        G: 'rgb(83, 83, 83)',
        C: 'rgb(0, 114, 190)'
    };
    var demo = false;
    $('#QQC_upload').on('change', function(event) {
        files = event.target.files;
        demo = false;
        $('#QQC_upload_group').removeClass('btn-warning');
        $('#QQC_upload_group').addClass('btn-success');
    });

    $('#QQC_demo').click(function() {
        demo = true;
        $('#QQC_upload_group').removeClass('btn-warning');
        $('#QQC_upload_group').addClass('btn-default');
        $('#QQC_preceding').val('CGT GAT TTT');
        $('#QQC_mutation').val('1NDT 9VHG 1TGG');
    })

    $('#QQC_clear').click(function() {
        demo = false;
        $('#QQC_upload_group').removeClass('btn-success');
        $('#QQC_upload_group').removeClass('btn-default');
        $('#QQC_upload_group').addClass('btn-warning');
        $('#QQC_preceding').val('');
        $('#QQC_mutation').val('');
        $("#QQC_result").hide();
    })


    $('#QQC_calculate').click(function() {
        $("#QQC_result").html('<div class="alert alert-warning" role="alert"><span class="pyspinner"></span> Waiting for server reply.</div>');
        $("#QQC_result").removeClass('hidden');
        $("#QQC_result").show(); //weird combo.
        var data = new FormData();
        if (demo) {
            data.append("file", 'demo');
        } else {
            data.append("file", files[0]);
        }
        data.append("location", $('#QQC_preceding').val());
        data.append("scheme", $('#QQC_mutation').val());
        $.ajax({
            url: 'ajax_QQC',
            type: 'POST',
            data: data,

            success: function(result) {
                reply = JSON.parse(result.message);
                window.sessionStorage.setItem('primers', JSON.stringify(reply['data']));
                $("#QQC_download").removeClass('hidden');
                $("#QQC_download").show(); //weird combo.
                $("#QQC_result").html(reply['html']);
                //traces
                bases = ['A', 'T', 'G', 'C'];
                var raw_trace = bases.map(function(base) {
                    return {
                        x: Array.apply(null, {
                            length: reply['data']['raw'][base].length
                        }).map(Number.call, Number),
                        y: reply['data']['raw'][base],
                        name: base,
                        type: 'scatter',
                        line: {
                            color: chromatomap[base]
                        }
                    };
                });
                Plotly.newPlot('QQC_raw_plot', raw_trace, {
                    title: 'Raw chromatogram data'
                });

                //piecharts
                cm2 = bases.map(function(base) {
                    return chromatomap256[base]
                });
                piedata = [{
                    values: bases.map(function(base) {
                        return reply['data']['nt'][0][base]
                    }),
                    labels: bases,
                    type: 'pie',
                    marker: {
                        colors: cm2
                    },
                    domain: {
                        x: [0, 0.30],
                        y: [0, 1]
                    }
                }, {
                    values: bases.map(function(base) {
                        return reply['data']['nt'][1][base]
                    }),
                    labels: bases,
                    type: 'pie',
                    marker: {
                        colors: cm2
                    },
                    domain: {
                        x: [0.35, 0.65],
                        y: [0, 1]
                    }
                }, {
                    values: bases.map(function(base) {
                        return reply['data']['nt'][2][base]
                    }),
                    labels: bases,
                    type: 'pie',
                    marker: {
                        colors: cm2
                    },
                    domain: {
                        x: [0.70, 1],
                        y: [0, 1]
                    }
                }]
                Plotly.newPlot('QQC_pie', piedata, {
                    title: 'Frequency at each position (non-deconvoluted'
                });
                //AA
                AA = ['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'Y', '*'];
                var aadata = [{
                    x: AA,
                    y: AA.map(function(a) {
                        return reply['data']['AAscheme'][a]
                    }),
                    name: 'Expected',
                    type: 'bar'
                }, {
                    x: AA,
                    y: AA.map(function(a) {
                        return reply['data']['AAemp'][a]
                    }),
                    name: 'Observed',
                    type: 'bar'
                }];

                var layout = {
                    barmode: 'group',
                    title: 'Pedicted amino acid proportions (deconvoluted)'
                };

                Plotly.newPlot('QQC_bar', aadata, layout);


            },
            error: function() {
                $("#QQC_result").html('<div class="alert alert-danger" role="alert"><span class="pycorpse"></span> Oh Snap. Nothing back.</div>');
            },
            cache: false,
            contentType: false,
            processData: false
        });
        return false;
    });
});

</script>
</body>
</html>